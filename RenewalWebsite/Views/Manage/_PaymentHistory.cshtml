@model RenewalWebsite.Models.SearchViewModel
@{
    Layout = null;
}

<link href="~/js/daterangepicker/daterangepicker.css" rel="stylesheet" />
<script src="~/lib/jquery/dist/jquery.js" type="text/javascript"></script>
<script src="~/js/daterangepicker/daterangepicker.js"></script>

<form asp-action="GetInvoicePdf" asp-controller="Manage" method="post">
    @Html.HiddenFor(model => model.showUSD, new { @id = "showUSD" })
    @Html.HiddenFor(model => model.FromDate, new { @id = "FromDate" })
    @Html.HiddenFor(model => model.ToDate, new { @id = "ToDate" })
    <div class="form-row">
        <div class="form-group">
            <label class="control-label col-md-2">@Localizer["From:"]</label>
            <div class="col-md-10">
                <div id="reportrange" class="pull-right" style="background: #fff; cursor: pointer; padding: 5px 10px; border: 1px solid #ccc; width: 100%;">
                    <span></span>&nbsp;<i class="fa fa-calendar-alt pull-right"></i>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="col-sm-offset-4 col-sm-8">
            <input type="button" id="btnSave" class="btn btn-default" value="@Localizer["Search"]" onclick="GenerateData()" />
            <input type="button" id="btnSubmitPDF" class="btn btn-default" value="@Localizer["PDF"]" onclick="GeneratePDF()" />
            <input type="submit" id="btnPDF" class="btn btn-default hide" value="PDF" />
        </div>
    </div>
</form>
<div class="form-row">
    <div class="col-md-12">
        <div id="divInvoiceHistory">

        </div>
    </div>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="form-group col-md-6" id="divUSD" style="display:none;">
            <input type="checkbox" id="usd" name="usd" onclick="changeValue(this)" /> @Localizer["Show USD conversion"]
            @Html.ValidationMessageFor(model => model.showUSD)
        </div>
    </div>
</div>
<script type="text/javascript">
    $(document).ready(function () {
        if ($('#reportrange').data('daterangepicker') != undefined) {
            $('#reportrange').data('daterangepicker').remove();
        }
        var thisYear = ((new Date()).getFullYear() - 1);
        var start = new Date("1/1/" + thisYear);
        var defaultStart = moment(start.valueOf());

        var end = new Date("12/31/" + thisYear);
        var defaultEnd = moment(end.valueOf());

        var start = defaultStart;
        var end = defaultEnd;

        $('#reportrange span').html(start.format('YYYY-MM-DD') + ' - ' + end.format('YYYY-MM-DD'));
        function cb(start, end) {
            $('#reportrange span').html(start.format('YYYY-MM-DD') + ' - ' + end.format('YYYY-MM-DD'));
        }

        $('#reportrange').daterangepicker({
            startDate: start,
            endDate: end,
            ranges: {
                'Today': [moment(), moment()],
                'Yesterday': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                'Last 7 Days': [moment().subtract(6, 'days'), moment()],
                'Last 30 Days': [moment().subtract(29, 'days'), moment()],
                'This Month': [moment().startOf('month'), moment().endOf('month')],
                'Last Month': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
            }
        }, cb);

        //displayUSDOption();
        GenerateData();
        //$("#usd").prop("checked", false);
    });

    function displayUSDOption() {
        var data = $('#reportrange').data('daterangepicker');
        var startDate = data.startDate.toDate();
        var endDate = data.endDate.toDate();
        var fromDate = data.startDate.format('YYYY-MM-DD');
        var toDate = data.endDate.format('YYYY-MM-DD');

        if (fromDate == "" || toDate == "") {
            return;
        }
        $.ajax({
            url: "/Manage/DisplayUsdOption",
            data: {
                fromDate: fromDate,
                toDate: toDate
            },
            type: 'POST',
            success: function (data) {
                debugger;
                if (data == true) {
                    $('#divUSD').css('display', 'block');
                    //$("#usd").prop("checked", false);
                    //$('#showUSD').val(false);
                }
                else {
                    $('#divUSD').css('display', 'none');
                }
            }
        });
    };

    function changeValue(item) {
        $('#showUSD').val(item.checked);
        GenerateData();
    };

    function GenerateData() {
        var data = $('#reportrange').data('daterangepicker');
        var startDate = data.startDate.toDate();
        var endDate = data.endDate.toDate();
        var fromDate = data.startDate.format('YYYY-MM-DD');
        var toDate = data.endDate.format('YYYY-MM-DD');

        $('#FromDate').val(fromDate);
        $('#ToDate').val(toDate);
        var showUsd = $('#showUSD').val();

        if (fromDate == "" || toDate == "") {
            return;
        }
        $('#divInvoiceHistory').html('');
        $.ajax({
            url: "/Manage/GetPaymentHistory",
            data: {
                fromDate: fromDate,
                toDate: toDate,
                showUSD: showUsd
            },
            type: 'POST',
            success: function (data) {
                $('#divInvoiceHistory').append(data);
                displayUSDOption();
            }
        });
    };

    function GeneratePDF() {
        var fromDate = $('#FromDate').val();
        var toDate = $('#ToDate').val();

        if (fromDate == "" || toDate == "") {
            return;
        }
        else {
            $('#btnPDF').trigger('click');
        }
    };
</script>